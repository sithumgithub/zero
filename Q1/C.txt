#include <iostream>
#include <unistd.h>
#include <sys/wait.h>
#include <algorithm>
#include <cmath>

using namespace std;

// Function to check if a number is prime
bool isPrime(int num) {
    if (num <= 1) return false;
    for (int i = 2; i <= sqrt(num); i++) {
        if (num % i == 0) return false;
    }
    return true;
}

int main() {
    int arr[10] = {23, 12, 45, 34, 78, 19, 56, 11, 2, 89};

    for (int i = 0; i < 8; i++) {
        pid_t pid = fork();

        if (pid == 0) { // Child processes
            if (i == 0) { // Display all numbers
                cout << "Parent Process: Array = ";
                for (int n : arr) cout << n << " ";
                cout << endl;
            } else if (i == 1) { // Sum of all numbers
                int sum = 0;
                for (int n : arr) sum += n;
                cout << "Child 1: Sum of all numbers = " << sum << endl;
            } else if (i == 2) { // Sum of even numbers
                int sum = 0;
                for (int n : arr) if (n % 2 == 0) sum += n;
                cout << "Child 2: Sum of even numbers = " << sum << endl;
            } else if (i == 3) { // Sum of odd numbers
                int sum = 0;
                for (int n : arr) if (n % 2 != 0) sum += n;
                cout << "Child 3: Sum of odd numbers = " << sum << endl;
            } else if (i == 4) { // Sum of prime numbers
                int sum = 0;
                for (int n : arr) if (isPrime(n)) sum += n;
                cout << "Child 4: Sum of prime numbers = " << sum << endl;
            } else if (i == 5) { // Ascending order
                sort(arr, arr + 10);
                cout << "Child 5: Ascending order = ";
                for (int n : arr) cout << n << " ";
                cout << endl;
            } else if (i == 6) { // Maximum number
                int maxNum = *max_element(arr, arr + 10);
                cout << "Child 6: Maximum number = " << maxNum << endl;
            } else if (i == 7) { // Search for a number
                int searchNum = 34; // Example search number
                bool found = false;
                for (int n : arr) {
                    if (n == searchNum) {
                        found = true;
                        break;
                    }
                }
                cout << "Child 7: Number " << searchNum << (found ? " found" : " not found") << " in the array." << endl;
            }
            return 0; // End child process
        }
    }

    // Parent waits for all child processes
    while (wait(NULL) > 0);

    return 0;
}
